---
import "../styles/global.css";
import "@fontsource-variable/dm-sans";
import "@fontsource-variable/space-grotesk";
import Nav from "@components/Nav.astro";
import Footer from "@components/Footer.astro";
import { useTranslations } from "@i18n/utils";
import type { languages } from "@i18n/ui";
import { getRelativeLocaleUrl } from "astro:i18n";

interface Props {
  pageTitle?: string;
  description?: string;
  url?: string;
}

const currentLang = Astro.currentLocale || "en";
const translateUi = useTranslations(currentLang as keyof typeof languages);

const {
  pageTitle,
  description = translateUi("description"),
  url,
} = Astro.props;
const siteTitle = "Architect";
const finalTitle = [siteTitle, pageTitle].filter(Boolean).join(" | ");
const baseUrl = process.env.URL || "http:localhost:4321";
const finalUrl = url ? getRelativeLocaleUrl(currentLang, url) : baseUrl;
---

<!doctype html>
<html lang={currentLang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={finalUrl} />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicons/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicons/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicons/favicon-16x16.png"
    />
    <link rel="manifest" href="/favicons/site.webmanifest" />
    <title>{finalTitle}</title>
    <script
      type="application/ld+json"
      is:inline
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "WebPage",
        name: finalTitle,
        description: description,
        url: finalUrl,
        publisher: {
          "@type": "Organization",
          name: siteTitle,
          logo: {
            "@type": "ImageObject",
            url: `${baseUrl}/favicons/favicon-16x16.png`,
          },
        },
      })}
    />
    <script is:inline>
      (() => {
        const stored = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)",
        ).matches;
        const theme = stored || (prefersDark ? "dark" : "light");

        if (theme === "dark") {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      })();
    </script>
  </head>
  <body>
    <Nav lang={currentLang} translate={translateUi} />
    <slot />
    <Footer translate={translateUi} />
  </body>
</html>
